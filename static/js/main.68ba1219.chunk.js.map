{"version":3,"sources":["imgs/majed.jpg","imgs/home.jpg","imgs/measurement.jpg","imgs/mywebapp_splash.png","imgs/mywebapp_main.jpg","imgs/clinicx.png","component/ImageViewer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ImageViewer","props","updateDimensions","setState","width","window","innerWidth","state","addEventListener","this","removeEventListener","Carousel","className","Item","src","srcs","alt","Component","App","Me","Row","AccessMDHome","AccessMDMeasure","href","Clinicx","MywebappSplash","MywebappMain","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68ba1219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/majed.838b7bab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home.9954777a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/measurement.b8444a3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mywebapp_splash.bb9d2291.png\";","module.exports = __webpack_public_path__ + \"static/media/mywebapp_main.7eb2a1f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clinicx.0983580b.png\";","import React, { Component } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport \"./../App.css\";\r\n\r\nclass ImageViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: window.innerWidth };\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth });\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.width < 700) {\r\n      return (\r\n        <Carousel className=\"mx-auto\">\r\n          <Carousel.Item>\r\n            <img className=\"w-100\" src={this.props.srcs[0]} alt=\"app-pic\"></img>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img className=\"w-100\" src={this.props.srcs[1]} alt=\"app-pic\"></img>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"mx-auto mt-4\">\r\n          <img\r\n            className=\"mr-2 app-img\"\r\n            src={this.props.srcs[0]}\r\n            alt=\"app-pic\"\r\n          />\r\n          <img className=\"app-img\" src={this.props.srcs[1]} alt=\"app-pic\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ImageViewer;\r\n","import React, { Component } from \"react\";\nimport Me from \"./imgs/majed.jpg\";\nimport ImageViewer from \"./component/ImageViewer\";\nimport AccessMDHome from \"./imgs/home.jpg\";\nimport AccessMDMeasure from \"./imgs/measurement.jpg\";\nimport MywebappSplash from \"./imgs/mywebapp_splash.png\";\nimport MywebappMain from \"./imgs/mywebapp_main.jpg\";\nimport Clinicx from \"./imgs/clinicx.png\";\nimport { Row } from \"react-bootstrap\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"m-0 text-center\">\n        {/* Header Section */}\n        <div className=\"header p-3\">\n          <div className=\"pb-5 mb-5\">\n            <img\n              className=\"profile-pic rounded-circle\"\n              src={Me}\n              alt=\"majed-img\"\n            />\n            <h1 className=\"mt-4\">Majed Nuseibeh</h1>\n            <h2>Mobile application and Software Developer</h2>\n          </div>\n          <img\n            src=\"http://erikdkennedy.com/r-r-r-random/divider-triangle.png\"\n            className=\"divider\"\n          />\n        </div>\n        {/* About Section */}\n        <div className=\"mt-3 mx-auto w-75 text-left text-dark-blue\">\n          <h2 className=\"font-weight-bold\">About</h2>\n          <p>\n            Graduated with B.Sc. degree in Computer Science, high programming\n            skills in Java and C#, highly motivated, creative, high analytical\n            skill, seeking challenges, Fast learner and team player.\n            <br />I work with Native Android Development, Flutter Framework, and\n            Web Development.\n          </p>\n        </div>\n        {/* Portfolio Section */}\n        <div className=\"text-dark-blue mt-5 text-center\">\n          <div className=\"w-75 mx-auto text-left\">\n            <h2 className=\"font-weight-bold\">My Portfolio</h2>\n          </div>\n          <Row className=\"mt-5 mx-auto\">\n            <div className=\"col-12\">\n              <div className=\"w-75 mx-auto text-left\">\n                <h3>Access.md</h3>\n                <ImageViewer srcs={[AccessMDHome, AccessMDMeasure]} />\n              </div>\n              <div className=\"text-left mt-5 w-75 mx-auto\">\n                <p>\n                  Contributed in creating the mobile app of Access.md. <br />\n                  The Goal of this application is to reduce the number of\n                  hospital/clinic visits during a pandemic for people who do not\n                  truly need it. This results in lower spread due to less\n                  movement and less risk to frontline workers. This application\n                  is a web/mobile app that allows doctors and patients to\n                  followup their cases for COVID-19 and other pandemic\n                  treatment. Doctors follow up a patient's case, checking their\n                  symptoms, vitals, chatting with them, and providing\n                  recommendations.\n                </p>\n                <p>\n                  For more information visit us on\n                  <a href=\"https://github.com/openmymed/access.md\"> Github</a>\n                </p>\n\n                <h3>Technologies</h3>\n                <p>Android, Java, Javalin, React.</p>\n              </div>\n            </div>\n          </Row>\n          <hr className=\"w-75\"></hr>\n          <Row className=\"mt-3 mx-auto\">\n            <div className=\"col-12\">\n              <div className=\"w-75 mx-auto text-left\">\n                <h3>Clincx</h3>\n                <img className=\"w-100\" src={Clinicx} alt=\"clincx-img\" />\n              </div>\n              <div className=\"text-left mt-5 w-75 mx-auto\">\n                <p>\n                  A Clinical Management System for gynaecological and obstetric\n                  patients.\n                  <br />\n                  Doctors can record, search patients visits, and all the needed\n                  information for pregnancy.\n                </p>\n                <h3>Technologies</h3>\n                <p>Java, JavaFX, SQLite, Maven.</p>\n              </div>\n            </div>\n          </Row>\n          <hr className=\"w-75\"></hr>\n          <Row className=\"mt-5 mx-auto\">\n            <div className=\"col-12\">\n              <div className=\"w-75 mx-auto text-left\">\n                <h3>MyWebApp</h3>\n                <ImageViewer srcs={[MywebappSplash, MywebappMain]} />\n              </div>\n              <div className=\"text-left mt-5 w-75 mx-auto\">\n                <p>\n                  A Bilingual E-commerce android application built for shopping\n                  online in English and Arabic for the Arabic marketplace.\n                  <br />\n                  Customers can pay with different payment method such as\n                  Paypal, Cash on Delivery, etc..\n                </p>\n                <h3>Technologies</h3>\n                <p>WordPress, WooCommerce, MySQL, PHP, Java for Android.</p>\n              </div>\n            </div>\n          </Row>\n        </div>\n        <hr className=\"w-75\"></hr>\n        {/* Resume Section */}\n        <div className=\"mt-3 mx-auto w-75 text-left text-dark-blue\">\n          <h6>\n            You can find my{\" \"}\n            <a href=\"https://drive.google.com/file/d/1IQ4DS-64Y3Q3kDYMU93uFe6WbNnkvnQo/view?usp=sharing\">\n              Resume\n            </a>{\" \"}\n            & <a href=\"https://www.linkedin.com/in/majednuseibeh\">LinkedIn</a>\n          </h6>\n          <h6>\n            Email:{\" \"}\n            <a href=\"mailto:majednuseibeh@gmail.com\">majednuseibeh@gmail.com</a>\n          </h6>\n        </div>\n        {/* Footer Section */}\n        <div className=\"mt-5 p-1 text-left bg-dark-blue\">\n          <p>© 2020 Majed Nuseibeh.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}